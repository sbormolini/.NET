#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!markdown

#### Mapster
https://github.com/MapsterMapper/Mapster
source code: Muhammad Waseem

#!csharp

public class StudentDTO
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public string? Email { get; set; }
}

public class StudentEntity
{
    public int StudentId { get; set; }
    public string? StudentName { get; set; }
    public string? StudentEmail { get; set; }
}

// using
using (SomeDbContext context)
{
    var students = context.Students
        .ProjectToType<StudentDTO>()
        .ToList();
}

#!markdown

#### Parsing websites in C# with Html Agility Pack or AngleSharp
source: https://blog.elmah.io/parsing-websites-in-c-with-html-agility-pack-or-anglesharp/
https://www.nuget.org/packages/HtmlAgilityPack/

#!csharp

var httpClient = new HttpClient
{
    BaseAddress = new Uri("https://books.toscrape.com/")
};
var response = await httpClient.GetAsync("/");
var content = await response.Content.ReadAsStreamAsync();

var htmlDocument = new HtmlDocument();
htmlDocument.Load(content);

var selections = new Dictionary<string, string>();

var books = htmlDocument.DocumentNode.SelectNodes("//article[@class='product_pod']");
foreach (var book in books)
{
    var anchor = book.SelectSingleNode("div[1]/a");
    var href = anchor.GetAttributeValue("href", string.Empty);

    var image = anchor.SelectSingleNode("img[@class='thumbnail']");
    var alt = image.GetAttributeValue("alt", string.Empty);

    selections.Add(alt, href);
}
