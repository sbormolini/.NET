#!csharp

using System.Collections.Generic;
using static System.Console;

var number = 1;

new List<string> {
    $"|{number}|",      //|1|
    $"|{number,-10}|",  //|1    |
    $"|{number,10}|"    //|    1|
}.ForEach(WriteLine);

#!markdown

### Stringbuilder
Although StringBuilder and String both represent sequences of characters, they are implemented differently. String is an immutable type. That is, each operation that appears to modify a String object actually creates a new string.<br>
Source: https://learn.microsoft.com/hu-hu/dotnet/api/system.text.stringbuilder?view=net-6.0<br>
<br>
Code source: @buhakmeh

#!csharp

using System.Text;
var thousands = Enumerable.Range(1, 10_000);

// dont do this
var output = "";
foreach (var item in thousands)
    output += item;

// do this instead
StringBuilder builder = new();
foreach (var item in thousands)
    builder.Append(item);

Console.WriteLine(builder.ToString());

#!markdown

### System.Diagnostics.CodeAnalysis.StringSyntaxAttribute
https://github.com/dotnet/runtime/issues/62505

#!csharp

using System.Diagnostics.CodeAnalysis;

void TestRegex([StringSyntax(StringSyntaxAttribute.Regex)]string regex) 
{

}
